@model Festispec.WebApplication.Models.InspectionformViewModel

@{
	ViewBag.Title = "Inspectieformulier";
}


@section Style{
	<link href="~/Content/CSS Views/Inspectionform.css" rel="stylesheet" />
}

<!DOCTYPE html>

<html>
<head>
	<meta name="viewport" content="width=device-width" />
	<title>Details</title>
</head>
<body>
	<div class="col-md-12">
		<br />
		<div class="progress-container">
			<img src="~/Content/CSS Views/festispec_logo.png" />
			<progress value="@Model.CompletedQuestions" max="@Model.Questions.Count()"></progress>
		</div>
		<br />

		<div class="inspection-info">
			<div class="inspection-data">
				<img src="@String.Format("data:image/jpg;base64,{0}", Model.LogoString)" />
				<h3>Vragenlijst @Model.Inspectionform.Opdracht.OpdrachtNaam</h3>
				<p>Datum inspectie: @Model.Inspectionform.DatumInspectie</p>
				<p>
					Festival locatie:
					@Model.Inspectionform.Straatnaam
					@Model.Inspectionform.Huisnummer in
					@Model.Inspectionform.Stad
				</p>
			</div>

			<div class="description-container">
				<button type="button" class="collapsible">
					Instructies vragenlijst
				</button>
				<div class="content">
					<p>@Model.Inspectionform.Beschrijving</p>
				</div>
			</div>
		</div>
		<br />

	</div>
	<div>
		@foreach (var questionVM in Model.Questions)
		{
			<div class="col-md-12">
				<div class="question-container">
					<button type="button" class="collapsible">
						#@questionVM.Question.VraagID @questionVM.Question.Vraagstelling
					</button>
					<div class="content">
						@using (Html.BeginForm("Details", "Inspectionform", questionVM, FormMethod.Post, new { enctype = "multipart/form-data" }))
						{
							@Html.HiddenFor(model => questionVM.Answer.InspecteurID)
							@Html.HiddenFor(model => questionVM.Answer.VraagID)
							@Html.HiddenFor(model => questionVM.Answer.AntwoordNummer)

							switch (questionVM.Question.Vraagtype)
							{
								case "ov":
									@Html.TextAreaFor(model => questionVM.AnswerText, htmlAttributes: new { style = "padding: 5px; font-size: 18px; width: 85%; max-width: 85%; min-height: 150px;" })
									break;
								case "mv":
									if (questionVM.AnswerText != null)
									{
										<p><b>Gekozen antwoord:</b></p>
										<p><i>@questionVM.AnswerText</i></p>
									}
									@Html.DropDownListFor(model => questionVM.AnswerText, questionVM.PossibleAnswers, htmlAttributes: new { style = "padding: 5px; font-size: 18px; width: 85%; max-width: 85%;" })
									break;
								case "av":
									if (questionVM.Answer.AntwoordImage != null)
									{
										<img src="data:image;base64,@System.Convert.ToBase64String(questionVM.Answer.AntwoordImage)" />
									}
									@Html.TextBoxFor(model => questionVM.ImageFile, new { type = "file", accept = ".jpg, .jpeg, .gif, .png", style = "padding: 10px 0; border:none; box-shadow: unset;" })
									break;
								case "sv":
									<div class="scale-question">
										@for (int i = 0; i < questionVM.Question.VraagMogelijkAntwoord.Count(); i++)
										{
											<div class="scale-option">
												@Html.RadioButtonFor(model => questionVM.AnswerText, i + 1) @(i + 1)
											</div>
										}
									</div>
									break;
							}
							<input type="image" class="answersave" src="~/Content/CSS Views/Save-icon.png" />
						}
					</div>
				</div>
			</div>
		}
	</div>
	<script>
		var coll = document.getElementsByClassName("collapsible");
		for (var i = 0; i < coll.length; i++) {
			coll[i].addEventListener("click", function() {
					this.classList.toggle("active");
					var content = this.nextElementSibling;
					if (content.style.display === "block") {
						content.style.display = "none";
					} else {
						content.style.display = "block";
					}
				});
		}
	</script>
</body>
</html>

